version: '3.8'

services:
  mini-judge:
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./problems:/app/problems:ro
      - ./tmp:/app/tmp
      - ./src:/app/src  # Mount source code for hot reload
      - /var/run/docker.sock:/var/run/docker.sock # for dockerode
      - /sys/fs/cgroup:/sys/fs/cgroup:ro  # Mount cgroup for memory tracking
    environment:
      - NODE_ENV=development
      - MAX_WORKERS=3
      - PORT=3000
      - BACKEND_HOST=backend
      - BACKEND_PORT=5000
    networks:
      - shared-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/problems', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  shared-network:
    external: true
    name: mini-competition-network
